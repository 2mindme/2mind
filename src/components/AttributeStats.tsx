import React from 'react';
import { motion } from 'framer-motion';
import { Attributes } from '../types/gameTypes';

interface AttributeStatsProps {
  attributes: Attributes;
}

const AttributeStats: React.FC<AttributeStatsProps> = ({ attributes }) => {
  // Mapeia os atributos para √≠cones e cores
  const attributeDetails = {
    vitality: {
      icon: '‚ù§Ô∏è',
      label: 'Vitalidade',
      color: 'bg-red-500',
      description: 'Representa sua sa√∫de f√≠sica geral',
      tooltip: 'Influenciado por exerc√≠cios, alimenta√ß√£o e descanso',
    },
    energy: {
      icon: '‚ö°',
      label: 'Energia',
      color: 'bg-yellow-500',
      description: 'Representa seu n√≠vel de energia di√°ria',
      tooltip: 'Influenciado por sono, nutri√ß√£o e hidrata√ß√£o',
    },
    focus: {
      icon: 'üéØ',
      label: 'Foco',
      color: 'bg-blue-500',
      description: 'Representa sua capacidade de concentra√ß√£o',
      tooltip: 'Influenciado por h√°bitos de produtividade e estado mental',
    },
    mood: {
      icon: 'üòä',
      label: 'Humor',
      color: 'bg-green-500',
      description: 'Representa seu estado emocional',
      tooltip: 'Influenciado pelo equil√≠brio dos outros atributos e atividades prazerosas',
    }
  };

  // Determina o efeito neurol√≥gico com base no valor do atributo
  const getNeurologicalEffect = (attribute: keyof Attributes) => {
    const value = attributes[attribute];
    
    if (value < 30) {
      return {
        status: 'Cr√≠tico',
        effect: attribute === 'vitality' ? 'Risco de esgotamento f√≠sico. Cortisol elevado e resposta inflamat√≥ria aumentada.' :
                attribute === 'energy' ? 'D√©ficit energ√©tico celular. Mitoc√¥ndrias com produ√ß√£o reduzida de ATP.' :
                attribute === 'focus' ? 'Desregula√ß√£o dopamin√©rgica e funcionamento pr√©-frontal prejudicado.' :
                'Desequil√≠brio de serotonina e fun√ß√£o hipocampal reduzida.'
      };
    } else if (value < 60) {
      return {
        status: 'Moderado',
        effect: attribute === 'vitality' ? 'Funcionamento fisiol√≥gico b√°sico. Homeostase mantida com esfor√ßo.' :
                attribute === 'energy' ? 'Produ√ß√£o energ√©tica adequada para fun√ß√µes b√°sicas. Reservas limitadas.' :
                attribute === 'focus' ? 'Circuitos de aten√ß√£o funcionais mas com alta taxa de altern√¢ncia.' :
                'Regula√ß√£o emocional b√°sica com resil√™ncia moderada ao estresse.'
      };
    } else {
      return {
        status: '√ìtimo',
        effect: attribute === 'vitality' ? 'Sistemas fisiol√≥gicos otimizados. Reservas adaptativas elevadas.' :
                attribute === 'energy' ? 'Biog√™nese mitocondrial ativa e alta produ√ß√£o energ√©tica celular.' :
                attribute === 'focus' ? 'Redes de aten√ß√£o est√°veis com modula√ß√£o dopamin√©rgica otimizada.' :
                'Equil√≠brio serotonina-dopamina favorecendo estado an√≠mico positivo e neuroplasticidade.'
      };
    }
  };

  return (
    <div className="flex flex-col space-y-4">
      {Object.entries(attributes).map(([key, value]) => {
        const attribute = key as keyof Attributes;
        const details = attributeDetails[attribute];
        const neurologicalEffect = getNeurologicalEffect(attribute);
        
        return (
          <div key={attribute} className="pb-2 relative group">
            <div className="flex justify-between mb-1">
              <div className="flex items-center">
                <span className="mr-2">{details.icon}</span>
                <span>{details.label}</span>
              </div>
              <span className="font-bold">{value}/100</span>
            </div>
            
            <div className="h-4 bg-gray-700 rounded-full overflow-hidden">
              <motion.div
                className={`h-full ${details.color}`}
                initial={{ width: '0%' }}
                animate={{ width: `${value}%` }}
                transition={{ duration: 1, type: 'spring' }}
              />
            </div>
            
            {/* Status neurol√≥gico e tooltip informativo */}
            <div className="mt-1 flex justify-between text-xs">
              <span className={value < 30 ? 'text-red-400' : value < 60 ? 'text-yellow-400' : 'text-green-400'}>
                {neurologicalEffect.status}
              </span>
              
              {/* Tooltip com informa√ß√£o neurocient√≠fica detalhada */}
              <div className="relative">
                <span className="cursor-help text-gray-400 underline">Info</span>
                <div className="absolute bottom-full right-0 mb-2 w-64 bg-gray-900 p-3 rounded-lg shadow-lg text-xs opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-opacity z-10 border border-purple-600">
                  <p className="font-bold mb-1">{details.description}</p>
                  <p className="text-gray-400 mb-2">{details.tooltip}</p>
                  <div className="border-t border-gray-700 pt-2">
                    <p className="text-purple-300 font-bold">Efeito Neurol√≥gico:</p>
                    <p>{neurologicalEffect.effect}</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );
      })}
    </div>
  );
};

export default AttributeStats; 